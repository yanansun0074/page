{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/portfolio/src/components/Meta.js\";\nimport React from \"react\";\nimport { projectList } from \"../helpers/ProjectList\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Meta({\n  name\n}) {\n  const project = projectDetail.find(p => p.name === name);\n  const content = project[\"content\"];\n  let container = document.createElement(\"div\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), Object.keys(content).forEach(key => {\n      console.log(\"there are some keys\");\n      if (key.includes(\"image\")) {\n        console.log(\"image found\");\n        let img = new Image();\n        img.src = content.key;\n        let p = document.createElement(\"p\");\n        p.innerHTML = \"A new image found\";\n        document.getElementById(\"body\").appendChild(img);\n        container.appendChild(p);\n      }\n      // let p = document.createElement(\"p\");\n      // p.appendChild(\"A new image found\")\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Meta;\nexport default Meta;\nvar _c;\n$RefreshReg$(_c, \"Meta\");","map":{"version":3,"names":["React","projectList","projectDetail","jsxDEV","_jsxDEV","Meta","name","project","find","p","content","container","document","createElement","children","id","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","forEach","key","console","log","includes","img","Image","src","innerHTML","getElementById","appendChild","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/portfolio/src/components/Meta.js"],"sourcesContent":["import React from \"react\";\nimport { projectList } from \"../helpers/ProjectList\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\n\nfunction Meta({ name }) {\n  const project = projectDetail.find((p) => p.name === name);\n  const content = project[\"content\"];\n  let container = document.createElement(\"div\");\n  return (\n    <div>\n      <div id=\"body\"></div>\n      {Object.keys(content).forEach((key) => {\n        console.log(\"there are some keys\");\n        if (key.includes(\"image\")) {\n          console.log(\"image found\");\n          let img = new Image();\n          img.src = content.key;\n          let p = document.createElement(\"p\");\n          p.innerHTML = \"A new image found\";\n          document.getElementById(\"body\").appendChild(img);\n          container.appendChild(p);\n        }\n        // let p = document.createElement(\"p\");\n        // p.appendChild(\"A new image found\")\n        return (\n          <div>\n            <p>This is key</p>\n          </div>\n        );\n      })}\n      {/* {content.forEach((key, value) => {\n        if (key.includes(\"image\")) {\n          return <div>image+1</div>;\n        } else if (key.includes(\"text\")) {\n          return <p> {value}</p>;\n        }\n        return <div>key+1</div>;\n      })} */}\n      <div>key</div>\n    </div>\n  );\n}\n\nexport default Meta;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACtB,MAAMC,OAAO,GAAGL,aAAa,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC;EAC1D,MAAMI,OAAO,GAAGH,OAAO,CAAC,SAAS,CAAC;EAClC,IAAII,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC7C,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAKW,EAAE,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACpBC,MAAM,CAACC,IAAI,CAACX,OAAO,CAAC,CAACY,OAAO,CAAEC,GAAG,IAAK;MACrCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,IAAIF,GAAG,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE;QACzBF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B,IAAIE,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;QACrBD,GAAG,CAACE,GAAG,GAAGnB,OAAO,CAACa,GAAG;QACrB,IAAId,CAAC,GAAGG,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACnCJ,CAAC,CAACqB,SAAS,GAAG,mBAAmB;QACjClB,QAAQ,CAACmB,cAAc,CAAC,MAAM,CAAC,CAACC,WAAW,CAACL,GAAG,CAAC;QAChDhB,SAAS,CAACqB,WAAW,CAACvB,CAAC,CAAC;MAC1B;MACA;MACA;MACA,oBACEL,OAAA;QAAAU,QAAA,eACEV,OAAA;UAAAU,QAAA,EAAG;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAEV,CAAC,CAAC,eASFf,OAAA;MAAAU,QAAA,EAAK;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACc,EAAA,GArCQ5B,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}