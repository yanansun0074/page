{"ast":null,"code":"import React from \"react\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\nfunction Meta({\n  name\n}) {\n  const project = projectDetail.find(p => p.name === name);\n  const content = project.content;\n  // const container = document.getElementById(\"body\");\n  const container = document.createElement(\"div\");\n  container.setAttribute(\"id\", \"body\");\n  container.innerHTML = \"\";\n  Object.keys(content).forEach((key, index) => {\n    console.log(\"there are some keys\");\n    if (key.includes(\"image\")) {\n      console.log(\"image found\");\n      let img = new Image();\n      img.src = content[key];\n      container.appendChild(img);\n    }\n    if (key.includes(\"text\")) {\n      let p = document.createElement(\"p\");\n      p.innerHTML = content[key];\n      container.appendChild(p);\n    }\n    return;\n  });\n  return container;\n\n  // return (\n  //   <div>\n\n  //     {/* {Object.keys(content).forEach((key, index) => {\n  //       console.log(\"there are some keys\");\n  //       if (key.includes(\"image\")) {\n  //         console.log(\"image found\");\n  //         let img = new Image();\n  //         img.src = content[key];\n\n  //         container.appendChild(img);\n  //       }\n  //       if (key.includes(\"text\")) {\n  //         let p = document.createElement(\"p\");\n  //         p.innerHTML = content[key];\n  //         container.appendChild(p);\n  //       }\n  //       return;\n  //     })} */}\n  //     {/* {content.forEach((key, value) => {\n  //       if (key.includes(\"image\")) {\n  //         return <div>image+1</div>;\n  //       } else if (key.includes(\"text\")) {\n  //         return <p> {value}</p>;\n  //       }\n  //       return <div>key+1</div>;\n  //     })} */}\n  //     {/* <div>key</div> */}\n  //   </div>\n  // );\n}\n_c = Meta;\nexport default Meta;\nvar _c;\n$RefreshReg$(_c, \"Meta\");","map":{"version":3,"names":["React","projectDetail","Meta","name","project","find","p","content","container","document","createElement","setAttribute","innerHTML","Object","keys","forEach","key","index","console","log","includes","img","Image","src","appendChild","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/portfolio/src/components/Meta.js"],"sourcesContent":["import React from \"react\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\n\nfunction Meta({ name }) {\n  const project = projectDetail.find((p) => p.name === name);\n  const content = project.content;\n  // const container = document.getElementById(\"body\");\n  const container = document.createElement(\"div\");\n  container.setAttribute(\"id\", \"body\");\n  container.innerHTML = \"\";\n\n  Object.keys(content).forEach((key, index) => {\n    console.log(\"there are some keys\");\n    if (key.includes(\"image\")) {\n      console.log(\"image found\");\n      let img = new Image();\n      img.src = content[key];\n\n      container.appendChild(img);\n    }\n    if (key.includes(\"text\")) {\n      let p = document.createElement(\"p\");\n      p.innerHTML = content[key];\n      container.appendChild(p);\n    }\n    return;\n  });\n\n  return container;\n\n  // return (\n  //   <div>\n\n  //     {/* {Object.keys(content).forEach((key, index) => {\n  //       console.log(\"there are some keys\");\n  //       if (key.includes(\"image\")) {\n  //         console.log(\"image found\");\n  //         let img = new Image();\n  //         img.src = content[key];\n\n  //         container.appendChild(img);\n  //       }\n  //       if (key.includes(\"text\")) {\n  //         let p = document.createElement(\"p\");\n  //         p.innerHTML = content[key];\n  //         container.appendChild(p);\n  //       }\n  //       return;\n  //     })} */}\n  //     {/* {content.forEach((key, value) => {\n  //       if (key.includes(\"image\")) {\n  //         return <div>image+1</div>;\n  //       } else if (key.includes(\"text\")) {\n  //         return <p> {value}</p>;\n  //       }\n  //       return <div>key+1</div>;\n  //     })} */}\n  //     {/* <div>key</div> */}\n  //   </div>\n  // );\n}\n\nexport default Meta;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,0BAA0B;AAExD,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACtB,MAAMC,OAAO,GAAGH,aAAa,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC;EAC1D,MAAMI,OAAO,GAAGH,OAAO,CAACG,OAAO;EAC/B;EACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC/CF,SAAS,CAACG,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC;EACpCH,SAAS,CAACI,SAAS,GAAG,EAAE;EAExBC,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,CAACQ,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IAC3CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,IAAIH,GAAG,CAACI,QAAQ,CAAC,OAAO,CAAC,EAAE;MACzBF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B,IAAIE,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACrBD,GAAG,CAACE,GAAG,GAAGhB,OAAO,CAACS,GAAG,CAAC;MAEtBR,SAAS,CAACgB,WAAW,CAACH,GAAG,CAAC;IAC5B;IACA,IAAIL,GAAG,CAACI,QAAQ,CAAC,MAAM,CAAC,EAAE;MACxB,IAAId,CAAC,GAAGG,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACnCJ,CAAC,CAACM,SAAS,GAAGL,OAAO,CAACS,GAAG,CAAC;MAC1BR,SAAS,CAACgB,WAAW,CAAClB,CAAC,CAAC;IAC1B;IACA;EACF,CAAC,CAAC;EAEF,OAAOE,SAAS;;EAEhB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACiB,EAAA,GAzDQvB,IAAI;AA2Db,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}