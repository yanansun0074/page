{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/portfolio/src/components/Meta.js\";\nimport React from \"react\";\nimport { projectList } from \"../helpers/ProjectList\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Meta({\n  name\n}) {\n  const project = projectDetail.find(p => p.name === name);\n  const content = project[\"content\"];\n  // let container = document.createElement(\"div\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"project\",\n      children: [Object.keys(content).forEach((key, index) => {\n        console.log(\"there are some keys\");\n        if (key.includes(\"image\")) {\n          console.log(\"image found\");\n          let img = new Image();\n          img.src = content.key;\n          let p = document.createElement(\"p\");\n          p.innerHTML = \"A new image found\";\n          document.getElementById(\"project\").appendChild(p);\n        }\n        // let p = document.createElement(\"p\");\n        // p.appendChild(\"A new image found\")\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Meta;\nexport default Meta;\nvar _c;\n$RefreshReg$(_c, \"Meta\");","map":{"version":3,"names":["React","projectList","projectDetail","jsxDEV","_jsxDEV","Meta","name","project","find","p","content","children","id","Object","keys","forEach","key","index","console","log","includes","img","Image","src","document","createElement","innerHTML","getElementById","appendChild","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/portfolio/src/components/Meta.js"],"sourcesContent":["import React from \"react\";\nimport { projectList } from \"../helpers/ProjectList\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\n\nfunction Meta({ name }) {\n  const project = projectDetail.find((p) => p.name === name);\n  const content = project[\"content\"];\n  // let container = document.createElement(\"div\");\n  return (\n    <div>\n      <div id=\"project\">\n        {Object.keys(content).forEach((key, index) => {\n          console.log(\"there are some keys\");\n          if (key.includes(\"image\")) {\n            console.log(\"image found\");\n            let img = new Image();\n            img.src = content.key;\n            let p = document.createElement(\"p\");\n            p.innerHTML = \"A new image found\";\n            document.getElementById(\"project\").appendChild(p);\n          }\n          // let p = document.createElement(\"p\");\n          // p.appendChild(\"A new image found\")\n          return (\n            <div>\n              <p>This is key</p>\n            </div>\n          );\n        })}\n        {/* {content.forEach((key, value) => {\n        if (key.includes(\"image\")) {\n          return <div>image+1</div>;\n        } else if (key.includes(\"text\")) {\n          return <p> {value}</p>;\n        }\n        return <div>key+1</div>;\n      })} */}\n        <div>key</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Meta;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACtB,MAAMC,OAAO,GAAGL,aAAa,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC;EAC1D,MAAMI,OAAO,GAAGH,OAAO,CAAC,SAAS,CAAC;EAClC;EACA,oBACEH,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAKQ,EAAE,EAAC,SAAS;MAAAD,QAAA,GACdE,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QAC5CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClC,IAAIH,GAAG,CAACI,QAAQ,CAAC,OAAO,CAAC,EAAE;UACzBF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;UAC1B,IAAIE,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;UACrBD,GAAG,CAACE,GAAG,GAAGb,OAAO,CAACM,GAAG;UACrB,IAAIP,CAAC,GAAGe,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;UACnChB,CAAC,CAACiB,SAAS,GAAG,mBAAmB;UACjCF,QAAQ,CAACG,cAAc,CAAC,SAAS,CAAC,CAACC,WAAW,CAACnB,CAAC,CAAC;QACnD;QACA;QACA;QACA,oBACEL,OAAA;UAAAO,QAAA,eACEP,OAAA;YAAAO,QAAA,EAAG;UAAW;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAEV,CAAC,CAAC,eASF5B,OAAA;QAAAO,QAAA,EAAK;MAAG;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GArCQ5B,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}