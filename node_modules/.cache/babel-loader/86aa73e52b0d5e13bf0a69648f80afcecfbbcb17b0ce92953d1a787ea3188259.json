{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/portfolio/src/components/Meta.js\";\nimport React from \"react\";\nimport { projectList } from \"../helpers/ProjectList\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Meta({\n  name\n}) {\n  const project = projectDetail.find(p => p.name === name);\n  const content = project[\"content\"];\n  const container = document.getElementById(\"body\");\n  container.innerHTML = \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(content).forEach((key, index) => {\n      console.log(\"there are some keys\");\n      if (key.includes(\"image\")) {\n        console.log(\"image found\");\n        let img = new Image();\n        img.src = content[key];\n        container.appendChild(img);\n      }\n      if (key.includes(\"text\")) {\n        let p = document.createElement(\"p\");\n        p.innerHTML = content[key];\n        container.appendChild(p);\n      }\n      return;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Meta;\nexport default Meta;\nvar _c;\n$RefreshReg$(_c, \"Meta\");","map":{"version":3,"names":["React","projectList","projectDetail","jsxDEV","_jsxDEV","Meta","name","project","find","p","content","container","document","getElementById","innerHTML","children","Object","keys","forEach","key","index","console","log","includes","img","Image","src","appendChild","createElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/portfolio/src/components/Meta.js"],"sourcesContent":["import React from \"react\";\nimport { projectList } from \"../helpers/ProjectList\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\n\nfunction Meta({ name }) {\n  const project = projectDetail.find((p) => p.name === name);\n  const content = project[\"content\"];\n  const container = document.getElementById(\"body\");\n  container.innerHTML = \"\";\n  return (\n    <div>\n      {Object.keys(content).forEach((key, index) => {\n        console.log(\"there are some keys\");\n        if (key.includes(\"image\")) {\n          console.log(\"image found\");\n          let img = new Image();\n          img.src = content[key];\n\n          container.appendChild(img);\n        }\n        if (key.includes(\"text\")) {\n          let p = document.createElement(\"p\");\n          p.innerHTML = content[key];\n          container.appendChild(p);\n        }\n        return;\n      })}\n      {/* {content.forEach((key, value) => {\n        if (key.includes(\"image\")) {\n          return <div>image+1</div>;\n        } else if (key.includes(\"text\")) {\n          return <p> {value}</p>;\n        }\n        return <div>key+1</div>;\n      })} */}\n      {/* <div>key</div> */}\n    </div>\n  );\n}\n\nexport default Meta;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACtB,MAAMC,OAAO,GAAGL,aAAa,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC;EAC1D,MAAMI,OAAO,GAAGH,OAAO,CAAC,SAAS,CAAC;EAClC,MAAMI,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EACjDF,SAAS,CAACG,SAAS,GAAG,EAAE;EACxB,oBACEV,OAAA;IAAAW,QAAA,EACGC,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,CAACQ,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC5CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,IAAIH,GAAG,CAACI,QAAQ,CAAC,OAAO,CAAC,EAAE;QACzBF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B,IAAIE,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;QACrBD,GAAG,CAACE,GAAG,GAAGhB,OAAO,CAACS,GAAG,CAAC;QAEtBR,SAAS,CAACgB,WAAW,CAACH,GAAG,CAAC;MAC5B;MACA,IAAIL,GAAG,CAACI,QAAQ,CAAC,MAAM,CAAC,EAAE;QACxB,IAAId,CAAC,GAAGG,QAAQ,CAACgB,aAAa,CAAC,GAAG,CAAC;QACnCnB,CAAC,CAACK,SAAS,GAAGJ,OAAO,CAACS,GAAG,CAAC;QAC1BR,SAAS,CAACgB,WAAW,CAAClB,CAAC,CAAC;MAC1B;MACA;IACF,CAAC;EAAC;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUC,CAAC;AAEV;AAACC,EAAA,GAlCQ5B,IAAI;AAoCb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}