{"ast":null,"code":"import meta1 from \"../images/MetaMapper_travel.jpg\";\nimport meta2 from \"../images/MetaMapper_select.png\";\nimport meta3 from \"../images/MetaMapper_wayfinding.png\";\nimport meta4 from \"../images/MetaMapper_scene1.png\";\nimport meta5 from \"../images/MetaMapper_scene2.png\";\nimport uname1 from \"../images/CommonUsername_Poster.png\";\nimport golf1 from \"../images/MiniGolf_image1.png\";\nimport golf2 from \"../images/MiniGolf_image2.png\";\nexport const projectDetail = [{\n  name: \"Met(a) Mapper\",\n  content: {\n    text: \"Met(a) Mapper is a headset-based 3D map for the Metropolitan Museum of Art that provides immersive experience, essential information about exhibition, and pathfinding.\\n\\nIn particular, we choose to create four scenes (Arms and Armor, Samurai Artifacts, Chinese Ceramics and Paintings, and Greek Sculptures) and implemented a variety of 3D interaction techniques to enhance the gameplay experience. These include teleportation to navigate through the scenes, artwork selection and manipulation to learn more about its origins and view it from different angles, and a main menu that allows you to easily find a specific artwork and exhibit.\",\n    text1: \"  Users will be able to move using a joystick, or teleport with arc indicators, with tunneling effects when useful.\",\n    image: meta1,\n    text2: \"Select works of art using virtual pointers. A menu UI will pop up, and users can rotate a copy of the art with joystick\",\n    image2: meta2,\n    text3: \"Use the On Display menu to find objects in the scene. Once clicked, waypoint arrow spawns in front of player to show direction, and another arrow above the object will also spawn.\",\n    image3: meta3,\n    text4: \"You can navigate to other scenes by clicking on labels on the wall.\",\n    image4: meta4,\n    text5: \"You can also navigate to other scenes by choosing through the Map Selection Menu.\",\n    image5: meta5\n  }\n}, {\n  name: \"Common Usernames\",\n  content: {\n    text: \"In this data visualization project on observable, we looked at how quickly common usernames were taken on Github, Twitch, and Reddit.\",\n    text1: 'People claim new usernames online every day and every minute, and each of such usernames represent a unique identity. Is there a pattern in taking usernames? How was the \"race\" on taking common names like when different social platforms were first launched? Generally, we want to examine how quickly common usernames are taken on social platforms and websites.',\n    text2: \"Our hypothesis is that more common names are taken in a faster manner. While our hypothesis appears to be obvious and not debatable, we want to focus on visualizing the trends of common usernames and their creation date, as well as any variations of the common names.\",\n    image1: uname1,\n    text3: \"See popular names and when they were taken (common first name, fruit, color, funny names!)\",\n    text4: \"Explore more names (and their variations) — on a globe.\",\n    text5: \"Search for names that you are interested in and their variations. There might be patterns and trends to explore! \"\n  }\n}, {\n  name: \"AR/VR Mini-Golf\",\n  content: {\n    text: \"This is a phone-based AR application that allows users to create a miniature golf (mini golf) course and a headset-based AR application for Meta Quest 2 in which users can play on the created course\",\n    text1: \"Part One: Phone-Based AR Mini Golf Course Builder\",\n    image: golf1,\n    text2: \"Function includes:\",\n    list: [\"Drag and drop a object from the row to add it to the scene. Textual and visual feedback will be triggered.\", \"Select an object in the scene.\", \"Press “Rotate” button to rotate the selected object.\", \"Press “Trash” button to delete the selected object.\", \"Drag the selected object to change its position.\", \"Redo and undo by pressing the corresponding buttons.\", \"Remove all existing objects from the scene with “Reset” button.\", \"Save the scene with “Save” button.\"],\n    text3: \"Part Two: Headset-Based AR Mini Golf Game\",\n    image1: golf2,\n    text4: \"Here's how user plays in AR:\",\n    list1: [\n    // \"Press controller's trigger to activate the small map. Hold the small map to match the reference map on the group. The scene will automatically load.\",\n    \"Press controller's trigger to activate the golf club. Use the club to hit the ball.\", \"The interface will track and show the number of hits, until the ball goes to the hole.\", 'To restart, press the trigger on another controller to activate the raycaster. Then click on the \"Restart\" button on the interface.']\n  }\n}];","map":{"version":3,"names":["meta1","meta2","meta3","meta4","meta5","uname1","golf1","golf2","projectDetail","name","content","text","text1","image","text2","image2","text3","image3","text4","image4","text5","image5","image1","list","list1"],"sources":["/Users/apple/Desktop/portfolio/src/helpers/ProjectDetail.js"],"sourcesContent":["import meta1 from \"../images/MetaMapper_travel.jpg\";\nimport meta2 from \"../images/MetaMapper_select.png\";\nimport meta3 from \"../images/MetaMapper_wayfinding.png\";\nimport meta4 from \"../images/MetaMapper_scene1.png\";\nimport meta5 from \"../images/MetaMapper_scene2.png\";\nimport uname1 from \"../images/CommonUsername_Poster.png\";\nimport golf1 from \"../images/MiniGolf_image1.png\";\nimport golf2 from \"../images/MiniGolf_image2.png\";\n\nexport const projectDetail = [\n  {\n    name: \"Met(a) Mapper\",\n    content: {\n      text: \"Met(a) Mapper is a headset-based 3D map for the Metropolitan Museum of Art that provides immersive experience, essential information about exhibition, and pathfinding.\\n\\nIn particular, we choose to create four scenes (Arms and Armor, Samurai Artifacts, Chinese Ceramics and Paintings, and Greek Sculptures) and implemented a variety of 3D interaction techniques to enhance the gameplay experience. These include teleportation to navigate through the scenes, artwork selection and manipulation to learn more about its origins and view it from different angles, and a main menu that allows you to easily find a specific artwork and exhibit.\",\n      text1:\n        \"  Users will be able to move using a joystick, or teleport with arc indicators, with tunneling effects when useful.\",\n      image: meta1,\n      text2:\n        \"Select works of art using virtual pointers. A menu UI will pop up, and users can rotate a copy of the art with joystick\",\n      image2: meta2,\n      text3:\n        \"Use the On Display menu to find objects in the scene. Once clicked, waypoint arrow spawns in front of player to show direction, and another arrow above the object will also spawn.\",\n      image3: meta3,\n      text4:\n        \"You can navigate to other scenes by clicking on labels on the wall.\",\n      image4: meta4,\n      text5:\n        \"You can also navigate to other scenes by choosing through the Map Selection Menu.\",\n      image5: meta5,\n    },\n  },\n\n  {\n    name: \"Common Usernames\",\n    content: {\n      text: \"In this data visualization project on observable, we looked at how quickly common usernames were taken on Github, Twitch, and Reddit.\",\n      text1:\n        'People claim new usernames online every day and every minute, and each of such usernames represent a unique identity. Is there a pattern in taking usernames? How was the \"race\" on taking common names like when different social platforms were first launched? Generally, we want to examine how quickly common usernames are taken on social platforms and websites.',\n      text2:\n        \"Our hypothesis is that more common names are taken in a faster manner. While our hypothesis appears to be obvious and not debatable, we want to focus on visualizing the trends of common usernames and their creation date, as well as any variations of the common names.\",\n      image1: uname1,\n      text3:\n        \"See popular names and when they were taken (common first name, fruit, color, funny names!)\",\n      text4: \"Explore more names (and their variations) — on a globe.\",\n      text5:\n        \"Search for names that you are interested in and their variations. There might be patterns and trends to explore! \",\n    },\n  },\n  {\n    name: \"AR/VR Mini-Golf\",\n    content: {\n      text: \"This is a phone-based AR application that allows users to create a miniature golf (mini golf) course and a headset-based AR application for Meta Quest 2 in which users can play on the created course\",\n      text1: \"Part One: Phone-Based AR Mini Golf Course Builder\",\n      image: golf1,\n      text2: \"Function includes:\",\n      list: [\n        \"Drag and drop a object from the row to add it to the scene. Textual and visual feedback will be triggered.\",\n        \"Select an object in the scene.\",\n        \"Press “Rotate” button to rotate the selected object.\",\n        \"Press “Trash” button to delete the selected object.\",\n        \"Drag the selected object to change its position.\",\n        \"Redo and undo by pressing the corresponding buttons.\",\n        \"Remove all existing objects from the scene with “Reset” button.\",\n        \"Save the scene with “Save” button.\",\n      ],\n      text3: \"Part Two: Headset-Based AR Mini Golf Game\",\n      image1: golf2,\n      text4: \"Here's how user plays in AR:\",\n      list1: [\n        // \"Press controller's trigger to activate the small map. Hold the small map to match the reference map on the group. The scene will automatically load.\",\n        \"Press controller's trigger to activate the golf club. Use the club to hit the ball.\",\n        \"The interface will track and show the number of hits, until the ball goes to the hole.\",\n        'To restart, press the trigger on another controller to activate the raycaster. Then click on the \"Restart\" button on the interface.',\n      ],\n    },\n  },\n];\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iCAAiC;AACnD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAOC,KAAK,MAAM,qCAAqC;AACvD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAOC,MAAM,MAAM,qCAAqC;AACxD,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,KAAK,MAAM,+BAA+B;AAEjD,OAAO,MAAMC,aAAa,GAAG,CAC3B;EACEC,IAAI,EAAE,eAAe;EACrBC,OAAO,EAAE;IACPC,IAAI,EAAE,ioBAAioB;IACvoBC,KAAK,EACH,qHAAqH;IACvHC,KAAK,EAAEb,KAAK;IACZc,KAAK,EACH,yHAAyH;IAC3HC,MAAM,EAAEd,KAAK;IACbe,KAAK,EACH,qLAAqL;IACvLC,MAAM,EAAEf,KAAK;IACbgB,KAAK,EACH,qEAAqE;IACvEC,MAAM,EAAEhB,KAAK;IACbiB,KAAK,EACH,mFAAmF;IACrFC,MAAM,EAAEjB;EACV;AACF,CAAC,EAED;EACEK,IAAI,EAAE,kBAAkB;EACxBC,OAAO,EAAE;IACPC,IAAI,EAAE,uIAAuI;IAC7IC,KAAK,EACH,0WAA0W;IAC5WE,KAAK,EACH,6QAA6Q;IAC/QQ,MAAM,EAAEjB,MAAM;IACdW,KAAK,EACH,4FAA4F;IAC9FE,KAAK,EAAE,yDAAyD;IAChEE,KAAK,EACH;EACJ;AACF,CAAC,EACD;EACEX,IAAI,EAAE,iBAAiB;EACvBC,OAAO,EAAE;IACPC,IAAI,EAAE,wMAAwM;IAC9MC,KAAK,EAAE,mDAAmD;IAC1DC,KAAK,EAAEP,KAAK;IACZQ,KAAK,EAAE,oBAAoB;IAC3BS,IAAI,EAAE,CACJ,4GAA4G,EAC5G,gCAAgC,EAChC,sDAAsD,EACtD,qDAAqD,EACrD,kDAAkD,EAClD,sDAAsD,EACtD,iEAAiE,EACjE,oCAAoC,CACrC;IACDP,KAAK,EAAE,2CAA2C;IAClDM,MAAM,EAAEf,KAAK;IACbW,KAAK,EAAE,8BAA8B;IACrCM,KAAK,EAAE;IACL;IACA,qFAAqF,EACrF,wFAAwF,EACxF,qIAAqI;EAEzI;AACF,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}