{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/portfolio/src/components/Meta.js\";\nimport React from \"react\";\nimport { projectList } from \"../helpers/ProjectList\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Meta({\n  name\n}) {\n  const project = projectDetail.find(p => p.name === name);\n  const content = project.content;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(content).forEach((key, value) => {\n      if (key.includes(\"image\")) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: value,\n          alt: \"project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 18\n        }, this);\n      } else if (key.includes(\"text\")) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 18\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"key+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = Meta;\nexport default Meta;\nvar _c;\n$RefreshReg$(_c, \"Meta\");","map":{"version":3,"names":["React","projectList","projectDetail","jsxDEV","_jsxDEV","Meta","name","project","find","p","content","children","Object","keys","forEach","key","value","includes","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/portfolio/src/components/Meta.js"],"sourcesContent":["import React from \"react\";\nimport { projectList } from \"../helpers/ProjectList\";\nimport { projectDetail } from \"../helpers/ProjectDetail\";\n\nfunction Meta({ name }) {\n  const project = projectDetail.find((p) => p.name === name);\n  const content = project.content;\n  return (\n    <div>\n      {Object.keys(content).forEach((key, value) => {\n        if (key.includes(\"image\")) {\n          return <img src={value} alt=\"project\" />;\n        } else if (key.includes(\"text\")) {\n          return <p> {value}</p>;\n        }\n        return <div>key+1</div>;\n      })}\n    </div>\n  );\n}\n\nexport default Meta;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACtB,MAAMC,OAAO,GAAGL,aAAa,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC;EAC1D,MAAMI,OAAO,GAAGH,OAAO,CAACG,OAAO;EAC/B,oBACEN,OAAA;IAAAO,QAAA,EACGC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC5C,IAAID,GAAG,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE;QACzB,oBAAOb,OAAA;UAAKc,GAAG,EAAEF,KAAM;UAACG,GAAG,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC1C,CAAC,MAAM,IAAIR,GAAG,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC/B,oBAAOb,OAAA;UAAAO,QAAA,GAAG,GAAC,EAACK,KAAK;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MACxB;MACA,oBAAOnB,OAAA;QAAAO,QAAA,EAAK;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACzB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAfQnB,IAAI;AAiBb,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}